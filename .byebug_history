cli_test.run
c
cli_test.run
c
ARGV
c
ARGV
c
ARGV
c
ARGV.first
c
 input_csv.nil?
 input_csv = ARGV.first
n
OptionParser.new
 options = {}
c
n
c
output_data.size
output_data
c
Time.now
c
Time.now
c
Time.now
allow(Time).to receive(:now)  .and_return(test_time)
test_time = OpenStruct.new(tv_sec: 123)
c
allow(Time).to receive(:now)  .and_return(test_time)
test_time = OpenStruct.new(tv_sec: 123)
c
Time.now
output_file
c
output_data
output_datac
c
output_datac
output_data
output_data.size
c
output_data.size
output_data.by_row
output_data.to_json
output_data.to_h
output_data.to_hash
output_data.size
output_data.methods
output_data.row_count
output_data
output_data.rows
output_data.row
output_data.headers
output_data
n
c
File.open('lib/fixtures/test_clients.csv')
File.open('outputs/output_123.csv')
instance_of
instance
path
config
c
File.open("/lib/test_clients.csv")
File.open("./lib/test_clients.csv")
File.open("lib/test_clients.csv")
File.open("./../../cli_test.rb")
File.open(".././../cli_test.rb")
File.open("../../cli_test.rb")
File.open("../test_clients.csv")
File.open("../../outputs/output_123.csv")
File.open("../../../outputs/output_123.csv")
File.open("../../../../outputs/output_123.csv")
File.open("../../../../outputs/test_clients.csv")
File.open("../../../outputs/test_clients.csv")
File.open("../../outputs/test_clients.csv")
File.open("../../../fixtures/test_clients.csv")
File.open("../../fixtures/test_clients.csv")
File.open("../../fictures/test_clients.csv")
File.open("../test_clients.csv")
File.open("test_clients.csv")
File.open("./test_clients.csv")
c
File.open('../fixtures/test_client.csv')
File.open("./../../outputs/output_123.csv")
File.open("../../outputs/output_123.csv")
File.open("./../outputs/output_123.csv")
File.open("/cli-test/cli_test/outputs/output_123.csv")
c
root
Rails.root
__FILE__
File.dirname(__FILE__)
$LOAD_PATH.unshift('spec')
$LOAD_PATH.unshift
$LOAD_PATH.first
$LOAD_PATH.methods
$LOAD_PATH
current_path
__dir__
___dir___
___DIR___
__DIR__
File.open("./../../outputs/output_123.csv")
File.open("/cli_test/outputs/output_123.csv")
File.open("/home/ubuntu/Desktop/project/cli-test/cli_test/outputs/output_123.csv")
FIle.open("/home/ubuntu/Desktop/project/cli-test/cli_test/outputs/output_123.csv")
File.open('../../../outputs/output_123.csv')
File.open('./../outputs/output_123.csv')
File.open('./../../outputs/output_123.csv')
File.open('../../outputs/output_123.csv')
c
Time.now.tv_sec
allow(Time).to receive(:now).and_return(test)
test = OpenStruct.new(tv_sec: 123)
Time.now
allow(Time).to receive(:now).and_return('123')
allow_any_instance_of(Time).to receive(:now).and_return('123')
allow_any_instance_of(Time).to receive(:now).and_return(123)
Time.now
allow_any_instance_of(Time).to receive(:now).and_return(123)
allow_any_instance_of(Time).to receive(:now),and_return(123)
allow_any_instance_of(Time).to recieve(:now),and_return(123)
c
CSV.read(output_csv, headers: true)
output_csv
c
n
c
let(:input_csv) { 'test_client.csv' }
n
c
